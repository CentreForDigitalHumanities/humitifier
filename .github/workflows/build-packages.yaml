name: Build packages

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'experimental'
      - 'feat/standalone-scanner' #temp
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'
      - 'develop'

env:
  PYTHON_VERSION: 3.13

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
      fail-fast: false
    defaults:
      run:
        shell: bash
        working-directory: 'humitifier-scanner'

    steps:
      #
      # Setup
      #
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set file-specific environment variable
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "ARTIFACT_PATH=humitifier-scanner\\dist\\humitifier-scanner.exe" >> $GITHUB_ENV
          else
            echo "ARTIFACT_PATH=humitifier-scanner/dist/humitifier-scanner" >> $GITHUB_ENV
          fi

      - uses: actions/setup-python@v5
        with:
           python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        if: matrix.os != 'windows-latest'
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: humitifier-scanner/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('humitifier-scanner/poetry.lock') }}

      - name: Install dependencies
        if: matrix.os == 'windows-latest' || steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #
      # Build
      #

      - name: Run PyInstaller
        run: |
          source $VENV
          pyinstaller -F --clean -n humitifier-scanner src/cli.py

      #
      # Upload
      #

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyinstaller-build-${{ matrix.os }}
          path: ${{ env.ARTIFACT_PATH }}


  package-linux:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        package: ['deb', 'rpm']
    steps:
      #
      # Setup
      #
      - name: Set up ref info
        id: ref-info
        run: |
          if [ "${{ github.ref_type }}" = "branch" ]; then
            echo "ref_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            echo "ref_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echp "ref_name=unknown" >> $GITHUB_ENV
          fi

      - name: Install RPM support
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y rpm
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install FPM
        run: gem install fpm

      - name: Download build executable
        uses: actions/download-artifact@v4
        with:
          name: pyinstaller-build-ubuntu-latest

      #
      # Package
      #

      - name: Package
        run: |
          fpm \
          -s dir -t ${{ matrix.package }} \
          -p humitifier-scanner.${{ env.ref_name }}.${{ matrix.package }} \
          --name humitifier-scanner \
          --license GPL-3.0 \
          --version ${{ env.ref_name }} \
          --architecture native \
          --depends bash --depends python3 \
          --description "Scan the universe" \
          --url "https://github.com/CentreForDigitalHumanities/humitifier" \
          --maintainer "Humanities IT System Team <systemteam.gw@uu.nl>" \
          humitifier-scanner=/usr/bin/humitifier-scanner

      #
      # Upload
      #

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.package }}
          path: humitifier-scanner.${{ env.ref_name }}.${{ matrix.package }}
