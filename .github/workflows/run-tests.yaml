name: Run server tests

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'experimental'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'
      - 'develop'
      - 'experimental'

env:
  PYTHON_VERSION: 3.13

jobs:
  build:
    runs-on: "ubuntu-latest"

    defaults:
      run:
        shell: bash
        working-directory: 'humitifier-server'

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      #
      # Setup
      #
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
           python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        if: matrix.os != 'windows-latest'
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: humitifier-scanner/.venv
          key: venv-tests-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('humitifier-server/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --only=main,dev --compile --no-interaction

      #
      # Run tests
      #

      - name: Run Tests
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: postgres
        run: |
          source $VENV
          python src/manage.py test
